#!/bin/bash

# Implement (a limited subset of) wget with curl.
# Note: this is still in experimental state, since no thorough testing has been done.

echo2()    { echo "$@" >&2 ; }
ERROR()    { echo2 "$progname: error: $1" ; }
DIE()      { ERROR "$1" ; exit 1 ; }
CurlExit() {
    local ecode="$1"
    echo2 "==> '${cmd[*]}' failed:"
    curl-exit-code-to-string "$ecode"
    exit $ecode
}

SupportedOptions() {
    local lo=${LOPTS//:/}
    lo="--${lo//,/ --}"
    local so=${SOPTS//:/}
    so=$(echo "$so" | sed -E 's|([a-zA-Z])| -\1|g')
    echo "$lo$so"
}

Usage() {
    local opts=$(printf "%s\n" $(SupportedOptions) | sed 's|^|    |')
    cat <<EOF
$progname is a limited '$wget' by supporting a subset of '$wget' options using 'curl'.
Supported '$wget' options:
$opts
EOF
}

Options() {
    # The only options supported here:
    local LOPTS="continue,directory-prefix:,help,output-document:,passive-ftp,quiet,show-command,show-progress,supported-options,timeout:,timestamping,user-agent:"
    local SOPTS="cP:O:qT:NU:h"
    local opts
    local has_output=no
    local args="[no-wget]"

    [ -x $wget ] && args=("$@")       # save args for the real wget

    opts="$(LANG=C /usr/bin/getopt -o="$SOPTS" --longoptions "$LOPTS" --name "$progname" -- "$@")" || {
        Usage
        exit 1
    }

    eval set -- "$opts"

    while true ; do
        case "$1" in
            # extra options
            --show-command)            hide_command=no                                 ;;
            --supported-options)       SupportedOptions;         exit 0                ;;

            # wget                           # curl
            --continue         | -c)   cmd+=(--continue-at -)                          ;;
            --directory-prefix | -P)   cmd+=(--output-dir "$2"); shift; has_output=yes ;;   # ??
            --output-document  | -O)   cmd+=(--output "$2");     shift; has_output=yes ;;
            --passive-ftp)             cmd+=(--disable-epsv)                           ;;   # ??
            --quiet            | -q)   cmd+=(--silent);                                ;;
            --show-progress)           cmd+=(--progress-bar)                           ;;
            --timeout          | -T)   cmd+=(--max-time "$2");   shift                 ;;
            --timestamping     | -N)   cmd+=(--remote-time)                            ;;
            --user-agent       | -U)   cmd+=(--user-agent "$2"); shift                 ;;
            --help             | -h)   Usage;                    exit 0                ;;

            --)                        shift; break                                    ;;
            -*)                        DIE "internal error: unsupported option '$1'"   ;;
        esac
        shift
    done
    if [ -n "$1" ] ; then
        [ "$has_output" = "no" ] && cmd+=(--remote-name-all)
        cmd+=("$@")
    fi
}

Main() {
    local progname="${0##*/}"
    local wget=wget
    local cmd=(/usr/bin/curl --fail --location --progress-bar)
    local hide_command=yes

    Options "$@"

    [ $hide_command = yes ] || echo2 "==> ${cmd[*]}"
    "${cmd[@]}" || CurlExit $?
}

Main "$@"
